{"version":3,"sources":["common.js"],"names":["angular","module","logger","$log","log","message","data","info","success","warning","warn","error","$inject","factory","exceptionHandlerProvider","this","config","appErrorPrefix","$get","provider","$provide","decorator","exceptionHandlerDecorator","$delegate","exceptionHandler","exception","cause","errorData","routehelper","$rootScope","init","stateChangeError","stateChangeSuccess","stateNotFound","$on","event","toState","toParams","fromState","to","uiLoad","$document","$q","$timeout","load","srcs","isArray","split","promise","deferred","forEach","src","then","indexOf","loadCSS","loadJS","resolve","loaded","defer","script","createElement","onload","e","onerror","reject","body","appendChild","href","style","rel","type","head","http","$http","get","url","params","doGet","realUrl","queryString","key","length","substring","post","Error","$","param","payload"],"mappings":"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","file":"common.min.js","sourcesContent":["(function () {\r\n  'use strict';\r\n\r\n  // logger\r\n  angular.module('blocks.logger', []);\r\n\r\n})();\n(function () {\r\n  'use strict';\r\n\r\n  logger.$inject = [\"$log\"];\r\n  angular.module('blocks.logger')\r\n    .factory('logger', logger);\r\n\r\n  /* @ngInject */\r\n  function logger($log) {\r\n    return {\r\n      log: log,\r\n      info: info,\r\n      success: success,\r\n      warning: warning,\r\n      error: error\r\n    };\r\n\r\n    /////////////////////\r\n\r\n\r\n    function log(message, data) {\r\n      $log.info('log: ' + message, data);\r\n    }\r\n\r\n    function info(message, data) {\r\n      $log.info('Info: ' + message, data);\r\n    }\r\n\r\n    function success(message, data) {\r\n      $log.info('Success: ' + message, data);\r\n    }\r\n\r\n    function warning(message, data) {\r\n      $log.warn('Warning: ' + message, data);\r\n    }\r\n\r\n    function error(message, data) {\r\n      $log.error('Error: ' + message, data);\r\n    }\r\n  }\r\n})();\n(function () {\r\n  'use strict';\r\n\r\n  angular.module('blocks.exception', [\r\n    // blocks\r\n    'blocks.logger'\r\n  ]);\r\n\r\n})();\n(function () {\r\n  'use strict';\r\n\r\n  angular.module('blocks.exception')\r\n    .provider('exceptionHandler', exceptionHandlerProvider);\r\n\r\n  function exceptionHandlerProvider() {\r\n    /* jshint validthis:true */\r\n    this.config = {\r\n      appErrorPrefix: 'front-' // error log's prefix\r\n    };\r\n\r\n    this.$get = function () {\r\n      return {\r\n        config: this.config\r\n      };\r\n    };\r\n  }\r\n\r\n})();\n(function () {\r\n  'use strict';\r\n\r\n  config.$inject = [\"$provide\"];\r\n  exceptionHandlerDecorator.$inject = [\"$delegate\", \"exceptionHandler\", \"logger\"];\r\n  angular.module('blocks.exception')\r\n    .config(config);\r\n\r\n  /* @ngInject */\r\n  function config($provide) {\r\n    // add prefix to log message\r\n    $provide.decorator('$exceptionHandler', exceptionHandlerDecorator);\r\n  }\r\n\r\n  /* @ngInject */\r\n  function exceptionHandlerDecorator($delegate, exceptionHandler, logger) {\r\n    return function (exception, cause) {\r\n\r\n      $delegate(exception, cause);\r\n\r\n      var errorData = {\r\n        exception: exception,\r\n        cause: cause\r\n      };\r\n      exception.message = exceptionHandler.config.appErrorPrefix + exception.message;\r\n      logger.error(exception.message, errorData);\r\n    };\r\n  }\r\n\r\n})();\n(function () {\r\n  'use strict';\r\n\r\n  angular.module('blocks.routehelper', [\r\n    // assets\r\n    'ui.router',\r\n    // blocks\r\n    'blocks.logger'\r\n  ]);\r\n\r\n})();\n(function () {\r\n  'use strict';\r\n\r\n  routehelper.$inject = [\"$rootScope\", \"logger\"];\r\n  angular.module('blocks.routehelper')\r\n    .factory('routehelper', routehelper);\r\n\r\n  /* @ngInject */\r\n  function routehelper($rootScope, logger) {\r\n\r\n    return {\r\n      'init': init\r\n    };\r\n\r\n    ///////////////\r\n\r\n    function init() {\r\n      stateChangeError();\r\n      stateChangeSuccess();\r\n      stateNotFound();\r\n    }\r\n\r\n    function stateChangeError() {\r\n      $rootScope.$on('$stateChangeError',\r\n        function (event, toState, toParams, fromState) {\r\n          logger.error('change state error.', [fromState, toState]);\r\n          // $location.path(routePath);\r\n        }\r\n      );\r\n    }\r\n\r\n    function stateChangeSuccess() {\r\n      $rootScope.$on('$stateChangeSuccess',\r\n        function (event, toState) {\r\n          logger.success('change state success. state = ', toState);\r\n        }\r\n      );\r\n    }\r\n\r\n    function stateNotFound() {\r\n      $rootScope.$on('$stateNotFound',\r\n        function (event, toState) {\r\n          logger.warning('state not found. state = ', toState.to);\r\n          logger.warning('state not found. params = ', toState.toParams);\r\n        }\r\n      );\r\n    }\r\n  }\r\n})();\n(function () {\r\n  'use strict';\r\n\r\n  angular.module('tools.uiLoad', [\r\n    'blocks.logger'\r\n  ]);\r\n\r\n})();\n(function () {\r\n  'use strict';\r\n\r\n  /**\r\n   * 0.1.1\r\n   * Deferred load js/css file, used for ui-jq.js and Lazy Loading.\r\n   * \r\n   * @ flatfull.com All Rights Reserved.\r\n   * Author url: #user/flatfull\r\n   */\r\n  uiLoad.$inject = [\"$document\", \"$q\", \"$timeout\", \"logger\"];\r\n  angular.module('tools.uiLoad')\r\n    .factory('uiLoad', uiLoad);\r\n\r\n  /* @ngInject */\r\n  function uiLoad($document, $q, $timeout, logger) {\r\n    var loaded = [];\r\n    var promise = false;\r\n    var deferred = $q.defer();\r\n\r\n    var service = {};\r\n\r\n    return {\r\n      load: load,\r\n      loadJS: loadJS,\r\n      loadCSS: loadCSS\r\n    };\r\n\r\n    /**\r\n     * Chain loads the given sources\r\n     * @param srcs array, script or css\r\n     * @returns {*} Promise that will be resolved once the sources has been loaded.\r\n     */\r\n    function load(srcs) {\r\n      srcs = angular.isArray(srcs) ? srcs : srcs.split(/\\s+/);\r\n      if (!promise) {\r\n        promise = deferred.promise;\r\n      }\r\n      angular.forEach(srcs, function (src) {\r\n        promise = promise.then(function () {\r\n          return src.indexOf('.css') >= 0 ? loadCSS(src) : loadJS(src);\r\n        });\r\n      });\r\n      deferred.resolve();\r\n      return promise;\r\n    }\r\n\r\n    /**\r\n     * Dynamically loads the given script\r\n     * @param src The url of the script to load dynamically\r\n     * @returns {*} Promise that will be resolved once the script has been loaded.\r\n     */\r\n    function loadJS(src) {\r\n      if (loaded[src]) return loaded[src].promise;\r\n\r\n      var deferred = $q.defer();\r\n      var script = $document[0].createElement('script');\r\n      script.src = src;\r\n      script.onload = function (e) {\r\n        $timeout(function () {\r\n          deferred.resolve(e);\r\n          logger.success('file loaded ' + src);\r\n        });\r\n      };\r\n      script.onerror = function (e) {\r\n        $timeout(function () {\r\n          deferred.reject(e);\r\n          logger.error('load file error  ' + src);\r\n        });\r\n      };\r\n      $document[0].body.appendChild(script);\r\n      loaded[src] = deferred;\r\n\r\n      return deferred.promise;\r\n    }\r\n\r\n    /**\r\n     * Dynamically loads the given CSS file\r\n     * @param href The url of the CSS to load dynamically\r\n     * @returns {*} Promise that will be resolved once the CSS file has been loaded.\r\n     */\r\n    function loadCSS(href) {\r\n      if (loaded[href]) return loaded[href].promise;\r\n\r\n      var deferred = $q.defer();\r\n      var style = $document[0].createElement('link');\r\n      style.rel = 'stylesheet';\r\n      style.type = 'text/css';\r\n      style.href = href;\r\n      style.onload = function (e) {\r\n        $timeout(function () {\r\n          deferred.resolve(e);\r\n          logger.success('file loaded ' + href);\r\n        });\r\n      };\r\n      style.onerror = function (e) {\r\n        $timeout(function () {\r\n          deferred.reject(e);\r\n          logger.error('load file error  ' + href);\r\n        });\r\n      };\r\n      $document[0].head.appendChild(style);\r\n      loaded[href] = deferred;\r\n\r\n      return deferred.promise;\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n})();\n(function () {\r\n  'use strict';\r\n\r\n  angular.module('tools.http', [\r\n    'blocks.logger'\r\n  ]);\r\n\r\n})();\n(function () {\r\n  'use strict';\r\n\r\n  http.$inject = [\"$http\", \"logger\"];\r\n  angular.module('tools.http')\r\n    .factory('http', http);\r\n\r\n  /* @ngInject */\r\n  function http($http, logger) {\r\n    return {\r\n      get: get,\r\n      post: post,\r\n      payload: payload\r\n    }\r\n\r\n    // http get\r\n    function get(url, params) {\r\n\r\n      // parameter is null\r\n      if (!params) {\r\n        return doGet(url);\r\n      }\r\n      var realUrl;\r\n      // object parameter\r\n      if (typeof params === 'object') {\r\n        // get queryString\r\n        var queryString = '';\r\n        for (var key in params) {\r\n          queryString += \"&\" + key + \"=\" + params[key];\r\n        }\r\n        // if there is no parameter in param\r\n        if (queryString.length === 0) {\r\n          return doGet(url);\r\n        }\r\n        // get real url\r\n\r\n        if (url.indexOf('?') >= 0) {\r\n          realUrl = url + queryString;\r\n        } else {\r\n          realUrl = url + \"?\" + queryString.substring(1);\r\n        }\r\n        return doGet(realUrl);\r\n      }\r\n\r\n      if (typeof params === 'string') {\r\n        // if there is no parameter in param\r\n        if (params.length === 0) {\r\n          return doGet(url);\r\n        }\r\n        // if parameter startsWith '&' remove it\r\n        if (params.substring(0, 1) === '&') {\r\n          params = params.substring(1);\r\n        }\r\n        // get real url\r\n        if (url.indexOf('?') >= 0) {\r\n          realUrl = url + '&' + params;\r\n        } else {\r\n          realUrl = url + '?' + params;\r\n        }\r\n        return doGet(realUrl);\r\n      }\r\n\r\n\r\n    }\r\n\r\n    // http post\r\n    function post(url, params) {\r\n      if (!params && typeof params !== 'object') {\r\n        throw new Error('please check your parameter before invoke.');\r\n      }\r\n      if (!params) {\r\n        return $http.post(url);\r\n      }\r\n      return $http.post(url, $.param(params));\r\n    }\r\n\r\n    // payload\r\n    function payload() {\r\n      throw new Error(\"con't support this method.\");\r\n    }\r\n\r\n    // do http get\r\n    function doGet(realUrl) {\r\n      return $http.get(realUrl);\r\n    }\r\n\r\n  }\r\n\r\n})();"],"sourceRoot":"/source/"}